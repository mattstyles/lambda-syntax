@import "syntax-variables";

:host,
atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .scroll-view {
    padding-left: .5em;
  }

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;
    overflow:visible;

    .line-number {
      &.cursor-line {
        position:relative;
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;

        // Right arrow - only works at a fixed text size, about 14px, adjust the border top & bottom for different sizes
        &:before {
          display: none;
          content: ' ';
          position:absolute;
          top: 0;
          right: -5px;
          height: 0px;
          background-color: transparent;
          width: 0px;

          border-top: 9px solid transparent;
          border-bottom: 9px solid transparent;
          border-left: 5px solid @syntax-gutter-background-color-selected;
        }
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .bracket-matcher .region {
    background-color: @syntax-selection-color;
  }
}

:host,
atom-text-editor .search-results {
  .marker .region {
    background-color: @selectionYellow;
  }
  .marker.current-result .region {
    background-color: @syntax-selection-color;
  }
}

/**
 * Packages
 */
.bracket-matcher .region {
  border-bottom: 1px solid @very-light-gray;
}

.spell-check .misspelling {
  border-bottom: 1px dashed @darkRed;
}

//
// Syntax
// ---

.comment {
  color: @medium-gray;
}

.keyword {
  color: @mercury;

  &.control {
    color: @yellow;
  }

  &.operator {
    color: @syntax-text-color;
  }

  &.other.special-method {
    color: @cyan;
  }

  &.other.unit {
    color: @mercury;
  }

  &.regexp {
    color: @red;
  }
}

.storage {
  color: @yellow;
}

.constant {
  color: @mercury;

  &.character.escape {
    color: @mercury;
  }

  &.numeric {
    color: @mercury;
  }

  &.other.color {
    color: @mercury;
  }

  &.other.symbol {
    color: @mercury;
  }

  &.regexp {
    color: @red;
  }
}

.variable {
  color: @yellow;

  &.interpolation {
    color: darken(@red, 10%);
  }

  &.parameter.function {
    color: @syntax-text-color;
  }

  &.less {
    color: @cyan;
  }
}

.invalid.illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.string {
  color: @cyan;

  &.regexp {
    color: @red;

    .source.ruby.embedded {
      color: @red;
    }
  }

  &.other.link {
    color: @red;
  }
}

.punctuation {
  &.definition {
    &.comment {
      color: @medium-gray;
    }

    &.tag {
      color: @light-gray;
    }

    &.keyword {
      color: @yellow;
    }

    &.string,
    &.variable,
    &.parameters,
    &.array {
      color: @light-gray;
    }

    &.heading,
    &.identity {
      color: @purple;
    }

    &.bold {
      color: @mercury;
      font-style: bold;
    }

    &.italic {
      color: @purple;
      font-style: italic;
    }

    &.regexp {
      color: @red;
    }
  }

  &.section.embedded {
    color: darken(@red, 10%);
  }

}

.support {
  &.class {
    color: @mercury;
  }

  &.function  {
    color: @cyan;

    &.any-method {
      color: @cyan;
    }

    &.less {
      color: @light-gray;
    }
  }

  &.quote {
    color: @light-gray;
  }
}

.entity {
  &.name.function {
    color: @mercury;
  }

  &.name.type {
    color: @red;
  }

  &.name.class, &.name.type.class {
    color: @light-orange;
  }

  &.name.section {
    color: @cyan;
  }

  &.name.tag {
    color: @light-gray;
    // text-decoration: underline;
  }

  &.other.inherited-class {
    color: @green;
  }

  &.other.attribute-name {
    color: @yellow;

    &.id {
      color: @yellow;
    }
  }
}

.meta {
  color: @light-gray;
  &.class {
    color: @red;
  }

  &.link {
    color: @cyan;
  }

  &.require {
    color: @cyan;
  }

  &.selector {
    color: @light-gray;
  }

  &.separator {
    background-color: @gray;
    color: @syntax-text-color;
  }

  &.tag.sgml {
    color: @darkRed;
  }

  &.id.toc-list {
    color: @purple;
  }
}

.regexp {
  &.constant.character {
    color: @red;
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  color: @mercury;

  &.bold {
    font-weight: 800;
  }

  &.italic {
    font-style: italic;
  }

  &.changed {
    color: @green;
  }

  &.deleted {
    color: @red;
  }

  &.heading {
    color: @mercury;
    font-weight: 800;
  }

  &.inserted {
    color: @green;
  }

  &.list {
    color: @light-gray;
  }

  &.quote {
    color: @light-gray;
  }

  &.raw.inline {
    color: @light-gray;
  }

  &.raw {
    color: @light-gray;
  }
}

.source .gfm {
  -webkit-font-smoothing: antialiased;
}

.gfm {
  &.comment {
    color: @mercury;
  }

  &.list {
    color: @light-gray;
  }
}

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
